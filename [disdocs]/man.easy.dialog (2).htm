<html>
   <head>
      <html>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
      <STYLE TYPE="text/css">
      <!--
         @page { size: 21cm 29.7cm; margin: 2cm }
         p { margin-left: 0.50cm }
         h1 { color:000000 }
         h2 { color:ff8800 }
         h3 { color:008800 }
         h4 { color:008888 }
         tt {color:000000;}
      -->
      </STYLE>
   </head>
   <body bgcolor="F0E68C">
      <center><h1>easy.dialog.qsp v 2.0</h1></center>
<table cellpadding="25" cellspacing="0" border="0" align="center" width="50%"><tr><td>
      <table width=100% cellpadding=10 cellspacing=10 border=0>
         <tr>
            <td width="50%" align=left valign=top><font size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></td>
         <td width="50%" valign=top><div align=justify><font size=2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Модуль разрабатывался для плеера QSP v 5.7.0, тестировался только на нём. Не гарантируется правильная работа на плеерах иных версий. Ошибки и недочёты в модуле устраняются по мере нахождения, поэтому гарантировать безупречную работу даже на "классике" не могу. Тестовая загрузка диалога из ста реплик заняла чуть больше 1000 мс. В режиме [NO PRE-SETS] - около 800 мс. Скорость загрузки диалога зависит от объёма диалога и от глубины вложенности реплик.<br>По всем вопросам и предложениям обращаться:<ul>
			<li>ICQ: 437337904</li>
			<li>Skype: aleksversus</li>
			<li>e-mails:<ul>
			<li>aleksversus@mail.ru</li>
			<li>lex666endless@rambler.ru</li>
			<li>aleks.versus@yandex.ru</li>
			<li>aleksversus@yandex.ru</li></ul></li>
			<li>Вконтакте: id40090736</li></ul>
<br>
Изначально модуль создавался для обеспечения нужд игры "Волшебство и сталь".</font></div></td>
         </tr>
      </table></td></tr><tr><td width="100%" bgcolor="ffffff">
      <p>Подробное руководство по использованию модуля, с примерами.</p>
      <h2>Подключение</h2>

<p>Предполагается, что вы уже пробовали писать игры на QSP, знаете основные команды и, возможно, знаете, что такое функции, переменные и массивы и как формируется html-форматирование. Впрочем, можно обойтись и без последнего.</p>

<p>Модуль поставляется в комплекте с библиотекой easy.math.qsp и без неё работать не будет.</p>

<p>Чтобы подключить модуль к своей игре, нужно:</p>
<ol>
   <li>Скачать архив и извлечь его содержимое в папку с вашей игрой. В папке с вашей игрой должна появиться папка "lib".<ul><li>После знакомства с примерами файл "<tt>game.easy.dialog.qsp</tt>" можно удалить.</li></ul></li>
   <li>Проверить в папке "lib" наличие файлов "<tt>easy.dialog.qsp</tt>" и "<tt>easy.math.qsp</tt>".</li>
   <li>Открыть файл своей игры (например с помощью QGen) и на самой первой локации ввести две строки:<div style="margin-left:0.75cm"><tt>addqst 'lib/easy.dialog.qsp'<br>addqst 'lib/easy.math.qsp'</tt></div></li>      
   <li>Сохранить свою игру.</li>
</ol>
<p>Теперь при запуске вашей игры, модуль "easy.dialog" и библиотека "easy.math" будут подключаться к игре автоматически.</p>

   <div style="margin-left:5%"><font color=#880000>Внимание!!! При подключении библиотек к своей игре будьте внимательны. К игре добавляются только те локации, названия которых отсутствуют в вашей игре. Просмотрите список локаций в подключаемых библиотеках, чтобы предупредить совпадения имён.</font></div></p>
<h2>Простые диалоги</h2>

<p>Чтобы использовать модуль, нужно знать, как написать диалог, чтобы модуль вас понял.</p>

<p>Диалоги пишутся предельно просто и не требуют специальных знаний, кроме тех, которые Вы получите сейчас.</p>

<p>Диалог - это разговор, как правило, двух персонажей. В игре один персонаж - это герой, которым управляет игрок, другой персонаж - неиграбельный, т.е. игрок условно не может им управлять. Персонаж игрока мы будем называть героем, а персонаж, с которым герой вступает в диалог, просто персонажем, актёром, или неписью (от англ. NPC - non-playable character).</p>

<p>Фразы, доступные игроку (и соответственно герою), должны выводиться в виде списка действий, доступных для выбора и выполнения. А фразы актёра должны выводиться непосредственно на экран автоматически. Собственно это все различия между одним типом фраз и другим.</p>

<p>Итак, у нас есть фразы NPC, которые выводятся автоматически, и фразы героя, которые появляются в виде действий и не используются в диалоге, пока игрок не выберет одну из них. Оба типа фраз помещаются между специальными метками. Я называю их тегами.</p>

<p><font color=#009900>{: <font color=#006600>Фраза, которую будет произносить неиграбельный персонаж</font> :}</font>   -   фигурная скобка, двоеточие, потом идёт реплика персонажа, потом двоеточие и снова фигурная скобка. "<font color="009900">{:</font>" - открывающий тег. "<font color="009900">:}</font>" - закрывающий тег. Всё, что произносит актёр, помещаем между такими тегами. Каждая отдельная фраза должна помещаться между тегами. Например:
<p><tt><font color="008800"><pre>
   {: Сегодня прекрасная погода. :}
   {: Не думал я, что будет дождь! :}
   {: На город набегают тучи, осенний сплин кого-то мучит... :}
</pre></font></tt></p>
<p><font color=#009900>[: <font color=#006600>Фраза, которая превратится в действие, а когда игрок выберет действие, станет репликой в диалоге.</font> :]</font>   - квадратная скобка, двоеточие, потом идёт реплика героя, снова двоеточие, квадратная скобка. "<font color=#009900>[:</font>" - открывающий тег, "<font color=#009900>:]</font>" - закрывающий тег. Всё, что может сказать герой, помещаем между такими тегами. Опять же, каждая отдельная фраза - в отдельных тегах. И каждая такая фраза будет выведена одним действием.</p>

<p>Фразы героя и актёра можно располагать одна в другой, или несколько в одной. Мало того, можно располагать фразы одного типа друг в друге.</p>

<p>Зачем это нужно? А вот зачем: диалог собирается и распознаётся по принципу вопрос-ответ. Допустим, реплика актёра - это вопрос, а реплика героя должна быть ответом на вопрос. Но игроку можно предложить несколько вариантов ответов на вопрос. Чтобы написать такой простой диалог: вопрос и несколько ответов, - делаем так:</p>

<p>Первым делом пишем вопрос. Например, непись должна спросить героя "Как тебя зовут?". Пишем:</p>
<p><tt><font color="008800"><pre>
      {: Как тебя зовут? :}
</pre></font></tt></p>
   <p>А теперь ответы на вопрос "вкладываем" в вопрос:</p>
<p><tt><font color="008800"><pre>
      {: Как тебя зовут? 
         [:Вася:]
         [:Петя:]
         [:Не твоё дело!:]
         [:Я забыл...:]
      :}
</pre></font></tt></p>
<p>   На экран выведется реплика актёра "Как тебя зовут?" и четыре действия. При щелчке на любом из действий, герой будет произносить фразу, написанную в этих репликах. Например, если игрок выберет действие "Я забыл...", на экран выведется фраза героя "Я забыл...".</p>

<p>Как сделать так, чтобы по щелчку на действии произносил фразу не только герой, но и актёр? Всё тем же способом. "Вложить" реплику актёра в реплику героя. Разовьём предыдущий пример:</p>
<p><tt><font color="008800"><pre>
   {: Как тебя зовут? 
      [:Вася:]
      [:Петя:]
      [:Не твоё дело!:]
      [:А тебя как?
         {:Меня Васькой Пупкиным кличут:}
      :]
   :}
</pre></font></tt></p>
<P>Таким образом, вкладывая реплики друг в друга, вы можете создавать большие ветвистые диалоги. Для примера, вот небольшой ветвистый диалог, на котором отрабатывались первые сборки модуля:</P>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
         Меня зовут Вася.
         {:Вас зовут Вася?
            [:Да, меня зовут Вася.
               {:да ну нафиг:}
               [:
               нет. чистая правда
               :]
            :]
            [:Нет, никто меня так не зовёт:]
         :}
         {:
            Это правда, что вас зовут Васей?
            [:Правда
            :]
            [:Неправда:]
         :}
      :]
      [:
         Меня зовут Петя.
         {:
            Вас зовут Петя?
            [:Да{:Как это удобно!:}:]
            [:
               Нет
               {:Вас зовут не Петя? Как неудобно!:}
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            [:Правда:]
            [:Неправда:]
         :}
         {:Неужели в самом деле Петей Вас зовут?
            [:В самом деле:]
            [:Нет, не в самом:]
         :}
      :]
   :}
</pre></font></tt></p>
<P>Обратите внимание на то, как записаны фразы, которые должны выводиться на экран в диалоге. Перед ними есть пустые строки, символы пробелов и табуляций. Модуль сам очистит фразы от мусора и уберёт пустые строки перед фразой и после неё, а так же пробельные символы перед каждой строкой и после неё. То есть даже если вы вставите фразу между тегами вот так:</P>
<p><tt><font color="008800"><pre>
   {:







                     Как вас зовут?






   :}
</pre></font></tt></p>
<P>То на экран всё равно будет выведено: "Как вас зовут?" без пробелов перед репликой и пустых строк.</P>

<h2>Запуск диалога</h2>

<P>Теперь, когда Вы знаете, как составлять диалог, нужно освоить его запуск и уяснить некоторые особенности вывода диалога на экран.</P>
<P>Текст диалога лучше присвоить какой-нибудь переменной. Например:</P>
<p><tt><pre>   <font color="880088">$диалог_старушки</font>=<font color="008800">"{:Добрый вечер, милок.
      [:
         Здравствуйте, бабуся!
      :]
      [:
         Девушка, мы разве знакомы?
      :]
   :}"</font></pre></tt></p>

<p>Далее делаем вызов диалога командой gosub</p>
<P><tt><font color=#0000ff>gosub</font> <font color="008800">'dialog.int'</font>,<font color="880088">$диалог_старушки</font></tt></P>
<P><tt><font color=#0000ff>gosub</font></tt> - это команда обращения к локации. Плеер обращается к локации "<tt><font color="008800">dialog.int</font></tt>", выполнет на ней весь код и возвращается обратно. После запятой стоит переменная <tt><font color="880088">$диалог_старушки</font></tt>, в которую, как вы помните, мы поместили диалог. Значение этой переменной будет передано локации "<tt><font color="008800">dialog.int</font></tt>" для обработки.</P>

<p>При вызове диалога автоматически очистится окно основного описания, окно дополнительного описания и список действий. Когда диалог будет закончен, всё восстановится обратно: и основное и дополнительное описание, и действия даже.</p>

<h2>Настройки диалога</h2>
<h3>Форматирование реплик</h3>

<p>по умолчанию, все реплики персонажей выводятся чёрным цветом, все реплики героя серым цветом с курсивом. по умолчанию, перед репликами не ставятся имена, но ставится знак тире. Всё это можно изменить и настроить непосредственно в самом тексте диалога.</p>

<p>Настройки можно вынести за реплики, тогда эти настройки будут считаться настройками по умолчанию. Например:<p>
<p><tt><font color="008800"><pre>
   npc="
   name:Бабуся:name
   "
   hero="name:Солдат Котёнкин:name"

   {:Добрый вечер, милок.
      [:
         Здравствуйте, бабуся!
      :]
      [:
         Девушка, мы разве знакомы?
      :]
   :}
</pre></font></tt></p>
<P>Настройки доступны самые разнообразные.</P>
<p><tt><font color="008800">npc="&nbsp;"</font></tt> - настройки отображения фраз неписи в окне основного описания.
<br><tt><font color="008800">hero="&nbsp;"</font></tt> - настройки отображения фраз героя в окне основного описания.
<br><a name="backprim1"></a>Настройки, вкладываемые в <tt><font color="008800">npc="&nbsp;"</font></tt> и <tt><font color="008800">hero="&nbsp;"</font></tt> <a href="#prim1" style="text-decoration:none; font-size:12px;" title="Примечание"><sup>[1]</sup></a> :
<div style="margin-left:3%"><tt><font color="008888">name:&nbsp;:name</font></tt> - имя. Если между двоеточиями нет символов, не отображается.</div>
<div style="margin-left:3%"><tt><font color="008888">ncolor:</font></tt> - цвет выводимого имени в шестнадцатеричном формате. Если не указан, или указан ошибочно, выводится чёрным (для неписей) или серым (для героя).</div>
<div style="margin-left:3%"><tt><font color="008888">nattrib:</font></tt> - аттрибуты выводимого имени, указываются подряд без пробелов:</div>
<div style="margin-left:5%"><tt><font color="000088">-b</font></tt> - жирный</div>
<div style="margin-left:5%"><tt><font color="000088">-i</font></tt> - курсив</div>
<div style="margin-left:5%"><tt><font color="000088">-n</font></tt> - нормальный. Сбрасывает значение прочих атрибутов.</div>
<div style="margin-left:5%">по умолчанию, для героя и для неписи выставлен жирный атрибут, для героя - курсив. Аттрибуты считываются в обратном порядке, начиная с последнего, таким образом происходит и применение. Допустим, мы не хотим, чтобы имя героя отображалось курсивом, но продолжало отображаться жирным шрифтом. Пишем "<tt><font color="008800">nattrib:-b-n</font></tt>". Сначала шрифт вернётся к нормальному виду, потом будет применена жирность. Если указать "<tt><font color="008800">nattrib:-n-b</font></tt>", то сначала будет применена жирность, а потом шрифт вернётся к нормальному виду.</div>
<div style="margin-left:3%"><tt><font color="008888">fcolor:</font></tt> - цвет выводимой фразы в шестнадцатеричном формате. Если не указан, или указан ошибочно, выводится чёрным (для неписей) или серым (для героя).</div>
<div style="margin-left:3%"><tt><font color="008888">fattrib:</font></tt> - аттрибуты выводимой фразы (см. список выше). Если не указаны, для фраз героя применяется курсив.</div>
<div style="margin-left:3%"><tt><font color="008888">tire:</font></tt> - вид тире. Можно указать любые непробельные символы, и они будут выводиться перед каждой фразой героя или неписи. Чтобы ничего не выводилось, указывается слово "nope". Чтобы выводились символы пробела, используйте <tt>&amp;nbsp;</tt> или поместите тег в круглые скобки "<tt><font color="008800">(tire: )</font></tt>".</div><a name="replic_sets"></a></p><p><tt><font color="008800">replics="&nbsp;"</font></tt> - настройки <a href="#replic_sets_a" title="подробнее...">порядка вывода реплик</a>:
<div style="margin-left:3%"><tt><font color="008888">repeat:</font></tt> - количество повторов вывода реплик неписи:</div>
<div style="margin-left:5%"><tt><font color="000088">one</font></tt> - выводится одна реплика. Например, выбранная случайно.</div>
<div style="margin-left:5%"><tt><font color="000088">once</font></tt> - реплики неписи, кроме одиночных, выводятся единожды. Если реплики исчерпаны, выводится последняя.</div>
<div style="margin-left:5%"><tt><font color="000088">cicle</font></tt> - реплики выводятся по кругу, т.е. имеют свойство повторяться. по умолчанию.</div>
<div style="margin-left:3%"><tt><font color="008888">shuffle:</font></tt> - порядок вывода реплик.</div>
<div style="margin-left:5%"><tt><font color="000088">random</font></tt> - случайный порядок</div>
<div style="margin-left:5%"><tt><font color="000088">straight</font></tt> - прямой порядок т.е. от первой к последней. по умолчанию.</div>
<div style="margin-left:5%">Счёт порядка вывода реплик и количества повторов ведётся только в течении диалога. Как только диалог будет закрыт, счёт обнуляется. Для сохранения счёта реплик, нужно использовать другие способы.</div>
</p>
<p>В записи настроек так же не играет роль количество пробельных символов и переводов строк. Единственное что, между настройками должен находиться хотя бы один пробел, символ табуляции, или символ перевода строки. Примеры настроек:</p>
<p><tt><font color="008800"><pre>
   npc="
      name:Бабуся:name
      ncolor:ff8800
      fcolor:886600
      fattrib:-i
      tire:nope
      "
   hero="name:Солдат Котёнкин:name ncolor:000000 fcolor:880088 nattrib:-b-n"
   replics="repeat:one
   shuffle:random"
</pre></font></tt></p>
<p>Непосредственно в тексте реплик можно использовать любые html-теги, поддерживаемые плеером, и таким образом дополнительно форматировать текст. Например, вы можете выделить одно слово в реплике другим цветом:</p>
<p><tt><font color="008800"><pre>
   {:Добрый вечер, милок.
      [:
         Здравствуйте, бабуся!
      :]
      [:
         Девушка, мы разве &lt;font color=#008800&gt;знакомы&lt;/font&gt;?
      :]
   :}
</pre></font></tt></p>
<p>Перед выводом на экран любая реплика облекается в точно такие же html-теги в соответствии с настройками. Например, Вы настроили цвет для фразы:</p>
<p><tt><font color="008800"><pre>
   npc="
      name:Бабуся:name
      fcolor:886600
   "
   {:Добрый вечер, милок.
      [:
         Здравствуйте, бабуся!
      :]
      [:
         Девушка, мы разве &lt;font color=#008800&gt;знакомы&lt;/font&gt;?
      :]
   :}
</pre></font></tt></p>
<P>Перед выводом на экран, будет сформирована строка:</P>

<p><tt>&lt;font color=#000000&gt;&lt;b&gt;Бабуся:&lt;/b&gt;&lt;/font&gt;&lt;font color=#886600&gt; — Добрый вечер, милок.&lt;/font&gt;</tt></p>

<p>На экране это будет выглядеть так:</p>

<p><font color=#000000><b>Бабуся:</b></font><font color=#886600> — Добрый вечер, милок.</font></p>

<p>Модуль автоматически включает распознавание html-тегов в плеере, при обращении к локации "dialog.int".</p>

<p>Когда игрок выберет действие "Девушка, мы разве <font color=#008800>знакомы</font>?", перед выводом на экран будет сформирована надпись:</p>

<p>&lt;font color=#888888&gt;&lt;i&gt; — Девушка, мы разве &lt;font color=#008800&gt;знакомы&lt;/font&gt;?&lt;/i&gt;&lt;/font&gt;
</p><p>
На экране это будет выглядеть так:</p>

<p><font color=#888888><i> — Девушка, мы разве <font color=#008800>знакомы</font>?</i></font></p>

<p>То есть будет сохранено автоматическое форматирование и форматирование, которое вы пропишете прямо внутри фразы. Это очень удобно, если нужно форматировать только одну реплику, предложение в реплике, или слово. Html-теги можно использовать и при указании имени, тогда имя будет отличаться от основного цвета.</p>

<h3>Наследование настроек</h3>

<P>Указывать настройки можно не только для всего диалога вцелом, но и для отдельных реплик и даже для целых веток. Возьмём наш старый пример и немного его модифицируем:</P>
<p><tt><font color="008800"><pre>
   npc="
   name:Ведущий:name
   ncolor:008888
   fcolor:008888
   "
   hero="
   name:Вася Пупкин:name
   "

   {:
      Как вас зовут?
      [:

      hero="ncolor:008800"
         Меня зовут Вася.
         {:Вас зовут Вася?
            [:
            npc="fcolor:880000"
            Да, меня зовут Вася.
               {:да ну нафиг:}
               [:
               нет. чистая правда
               :]
            :]
            [:Нет, никто меня так не зовёт:]
         :}
         {:
            Это правда, что вас зовут Васей?
            [:Правда
            :]
            [:Неправда:]
         :}
      :]
      [:
      hero="ncolor:ff0000"
         Меня зовут Петя.
         {:
            Вас зовут Петя?
            [:Да{:Как это удобно!:}:]
            [:
               Нет
               {:Вас зовут не Петя? Как неудобно!:}
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            [:Правда:]
            [:Неправда:]
         :}
         {:Неужели в самом деле Петей Вас зовут?
            [:В самом деле:]
            [:Нет, не в самом:]
         :}
      :]
   :}
</pre></font></tt></p>
<p>До начала диалога мы прописали настройки, которые будут считаться настройками по умолчанию. Первым делом на экран будет выведена фраза "Как вас зовут?" с настройками для npc, которые указаны для всего диалога. Для всего диалога указано так же и имя героя, но не указан ни цвет, ни аттрибуты жирности/наклона, поэтому будут применяться настройки по умолчанию. То есть цвет имени героя будет серым. Однако, как только игрок выберет одно из выпавших действий:</p>

<div style="margin-left:0.75cm">Меня зовут Вася</div>

<p>или</p>

<div style="margin-left:0.75cm">Меня зовут Петя</div>

<p>будут применены настройки, вложенные в это действие. Эти настройки подменят собой настройки, указанные для всего диалога, но лишь те из них, которые указаны явно. Так, если игрок выберет действие "Меня зовут Вася", имя героя для текущей и всех вложенных реплик будет зелёным. Все остальные настройки останутся прежними. Смотрим дальше. После выбора действия "Меня зовут Вася", актёр "переспросит": "Вас зовут Вася?", фраза эта появится на экране всё с теми же общими настройками для всего диалога. Однако вслед за ней на экране появятся два действия:</p>

<div style="margin-left:0.75cm">Да, меня зовут Вася.</div><p> и </p><div style="margin-left:0.75cm">Нет, никто меня так не зовёт</div>

<p>При выборе первого, настройка цвета для вывода фраз неписи изменится, и следующая фраза "да ну нафиг" появится на экране, раскрашенная красным цветом. Таким образом, как уже было сказано, для ветки реплик, или реплики, изменяется только та настройка, которая была явно указана. Не указанные настройки достаются в наследство от старшей реплики (т.е. той, в которую мы вложили текущую).</p>

<h3>Сброс настроек</h3>

<p>Для сброса настроек в значение, предопределённое для всего диалога (значения по умолчанию), используется ключевое слово default.</p>

<p><tt><font color="008800">npc="default"</font></tt>   - сбрасывает все настройки реплик неписи в значения по умолчанию (дефолтные значения),
<br><tt><font color="008800">hero="default"</font></tt>   - сбрасывает все настройки реплик героя в дефолтные значения,
<br><tt><font color="008800">replics="default"</font></tt> - сбрасывает все настройки порядка вывода реплик в дефолтные значения.</p>

<p>Можно сбрасывать так же и отдельную настройку, указав слово default после двоеточия. Например, сбросить цвет фраз:</p>

<p><tt><font color="008800">fcolor:default</font></tt>
<a name="replic_sets_a"></a>

         <h3>Порядок вывода реплик</h3>

<p><a href="#replic_sets">Выше</a> уже были обозначены основные настройки порядка вывода реплик. Рассмотрим подробнее их поведение на примере последнего диалога, а точнее вот этой его части:</p>
<p><tt><font color="008800"><pre>
  [:
  hero="ncolor:ff0000"
     Меня зовут Петя.
     <font color="880000">{:
        Вас зовут Петя?
        [:Да{:Как это удобно!:}:]
        [:
           Нет
           {:Вас зовут не Петя? Как неудобно!:}
        :]
     :}</font>
     <font color="880088">{:
        Это правда, что вас зовут Петей?
        [:Правда:]
        [:Неправда:]
     :}</font>
     <font color="000088">{:Неужели в самом деле Петей Вас зовут?
        [:В самом деле:]
        [:Нет, не в самом:]
     :}</font>
  :]

</pre></font></tt></p>
<p>Для наглядности разные реплики выделены разными цветами.</p>
<p>Предположим игрок выбрал действие "Меня зовут Петя". Какая из трёх реплик неписи должна быть выведена? Вот за это и отвечают настройки порядка вывода реплик.</p>
<p><tt><font color="008800">shuffle:</font></tt>   - настройка, определяющая выбор следующей реплики. Можно указать один из вариантов:</p>
<div style="margin-left:1.5cm"><tt><font color="000088">random</font></tt>   - реплика неписи будет выбрана случайным образом.</div>
<div style="margin-left:1.5cm"><tt><font color="000088">straight</font></tt>   - будет выбрана следующая реплика в порядке очереди. Т.е. если это первый выбор действия "Меня зовут Петя", будет выведена первая реплика (отмечена красным цветом), если игрок второй раз нажмёт на действие, будет выведена вторая реплика (отмечена фиолетовым цветом), и т.д.</div>
<p><tt><font color="008800">repeat:</font></tt>   - настройка, определяющая режим повтора реплик. Можно указать один из вариантов:</p>
<div style="margin-left:1.5cm"><tt><font color="000088">one</font></tt>   - всякий раз при выборе этого действия будет выводиться одна и та же реплика. Например, была выставлена настройка <tt><font color="008800">shuffle:random</font></tt>. Когда игрок выберет действие "Меня зовут Петя", случайным образом будет выбрана одна из реплик, и показана на экране. В следующий раз, когда игрок вновь выберет это же действие, вновь на экран будет выведена та же самая реплика.</div><br>
<div style="margin-left:1.5cm"><tt><font color="000088">once</font></tt>   - реплики будут выводиться не повторяясь по одному разу. После вывода последней реплики всё время будет выводиться только она. Например, была выставлена настройка <tt><font color="008800">shuffle:straight</font></tt>. Когда игрок выберет действие "Меня зовут Петя" первый раз, на экран будет выведена первая реплика (выделена красным цветом. Во второй раз появится вторая реплика (выделена фиолетовым), в третий раз - третья (синяя. Последняя реплика). В четвёртый, пятый и далее будет выводиться третья реплика.</div><br>
<div style="margin-left:1.5cm"><tt><font color="000088">cicle</font></tt>   - реплики будут выводиться непрерывно по кругу. Если выставлена настройка <tt><font color="008800">shuffle:straight</font></tt>, первый раз выведется первая реплика, второй раз - вторая, третий - третья, на четвёртый раз - вновь первая, потом снова: вторая, третья, первая, вторая... и т.д. Для настройки <tt><font color="008800">shuffle:random</font></tt> выбор реплики несколько сложнее. Первый раз, когда игрок выберет действия, реплика определится случайным образом из трёх. На второй раз случайным образом выбирается одна из двух оставшихся реплик. Потом последняя оставшаяся. В четвёртый раз вновь происходит выбор случайным образом из трёх реплик, и т.д.</div>

<h2>Чуть более сложные диалоги</h2>

<h3>Корни, ветви и узлы</h3>
<p>Для продолжения нам нужно разобраться в структуре диалогов и договориться о терминологии.</p>
<p>Из предыдущего раздела мы узнали, как пишутся диалоги. Реплики персонажа помещаются между тегами "{:" и ":}", а реплики героя между "[:" и ":]". При этом реплики персонажа должны выводиться на экран автоматически, а реплики героя сначала представать в виде действий. Чтобы соотнести одни реплики с другими, мы научились "вкладывать" одни реплики в другие. Выбор одной из реплик приводит к выводу вложенных реплик, те в свою очередь тянут за собой ещё вложенные реплики и т.д.</p><p>Но с чего же модуль начинает? Должна же быть какая-то реплика, с которой начинается вывод всех остальных реплик. Да. Такая реплика есть, хотя до сих пор мы не называли её репликой и не использовали как реплику. Это реплика, которая не включается в теги и собственно вынесена из диалога. В ней прописываются все дефолтные настройки. Она называется корнем диалога, корневой репликой или заголовком диалога. Модуль не применяет к ней никаких настроек форматирования и все прописанные в ней фразы выводятся как есть, без имени персонажа или героя перед ними. Возьмём предпоследний пример и слегка его изменим, чтобы взглянуть на то, как выглядит корень диалога (подсвечен фиолетовым цветом):</p>
<p><tt><font color="008800"><pre>
   <font color="880088">npc="
   name:Ведущий:name
   ncolor:008888
   fcolor:008888
   "
   hero="
   name:Вася Пупкин:name
   "
   Это заголовок диалога. Его корень. Данные реплики будут выведены
   на экран как есть, без применения форматирования из настроек диалога.
   Тем не менее символы пробелов и табуляций перед строками, а так же
   лишние переводы строк будут удалены.</font>
   {:
      Как вас зовут?
      [:

      hero="ncolor:008800"
         Меня зовут Вася.
         {:Вас зовут Вася?
            [:
            npc="fcolor:880000"
            Да, меня зовут Вася.
               {:да ну нафиг:}
               [:
               нет. чистая правда
               :]
            :]
            [:Нет, никто меня так не зовёт:]
         :}
         {:
            Это правда, что вас зовут Васей?
            [:Правда
            :]
            [:Неправда:]
         :}
      :]
      [:
      hero="ncolor:ff0000"
         Меня зовут Петя.
         {:
            Вас зовут Петя?
            [:Да{:Как это удобно!:}:]
            [:
               Нет
               {:Вас зовут не Петя? Как неудобно!:}
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            [:Правда:]
            [:Неправда:]
         :}
         {:Неужели в самом деле Петей Вас зовут?
            [:В самом деле:]
            [:Нет, не в самом:]
         :}
      :]
   :}
</pre></font></tt></p>
<p>Итак, корень - это реплика, которая помещена вне остального диалога, вне тегов, но меж тем в неё "помещены" все остальные реплики. Корень - это реплика, с которой начинается вывод диалога на экран. Естественно, если текст реплики отсутствует, на экран ничего не выводится, даже пустые строки.</p>
<p>Когда модуль находит первую реплику диалога (его корень) и выводит её на экран (или не выводит, если фраза не прописана), он находит также и все вложенные реплики. В нашем примере он отыщет всего одну реплику "Как вас зовут?". Для наглядности я выделил её красным:</p>
<p><tt><font color="008800"><pre>
   <font color="880088">npc="
   name:Ведущий:name
   ncolor:008888
   fcolor:008888
   "
   hero="
   name:Вася Пупкин:name
   "
   Это заголовок диалога. Его корень. Данные реплики будут выведены
   на экран как есть, без применения форматирования из настроек диалога.
   Тем не менее символы пробелов и табуляций перед строками, а так же
   лишние переводы строк будут удалены.</font>
   <font color="ff0000">{:
      Как вас зовут?</font>
      [:

      hero="ncolor:008800"
         Меня зовут Вася.
         {:Вас зовут Вася?
            [:
            npc="fcolor:880000"
            Да, меня зовут Вася.
               {:да ну нафиг:}
               [:
               нет. чистая правда
               :]
            :]
            [:Нет, никто меня так не зовёт:]
         :}
         {:
            Это правда, что вас зовут Васей?
            [:Правда
            :]
            [:Неправда:]
         :}
      :]
      [:
      hero="ncolor:ff0000"
         Меня зовут Петя.
         {:
            Вас зовут Петя?
            [:Да{:Как это удобно!:}:]
            [:
               Нет
               {:Вас зовут не Петя? Как неудобно!:}
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            [:Правда:]
            [:Неправда:]
         :}
         {:Неужели в самом деле Петей Вас зовут?
            [:В самом деле:]
            [:Нет, не в самом:]
         :}
      :]
   <font color="ff0000">:}</font>
</pre></font></tt></p>
<p>Распознав тип этой реплики, модуль поймёт, что она должна быть выведена автоматически и повторит ту же процедуру, что проделал с корневой репликой, но на этот раз применит к ней настройки. Т.е. выведет фразу как реплику неписи. Затем он вновь проверит, нет ли в этой реплике вложенных и обнаружит целых две. Каждую из них я выделил отдельным цветом:</p>
<p><tt><font color="008800"><pre>
   <font color="880088">npc="
   name:Ведущий:name
   ncolor:008888
   fcolor:008888
   "
   hero="
   name:Вася Пупкин:name
   "
   Это заголовок диалога. Его корень. Данные реплики будут выведены
   на экран как есть, без применения форматирования из настроек диалога.
   Тем не менее символы пробелов и табуляций перед строками, а так же
   лишние переводы строк будут удалены.</font>
   <font color="ff0000">{:
      Как вас зовут?</font>
      <font color="008888">[:hero="ncolor:008800"
         Меня зовут Вася.</font>
         {:Вас зовут Вася?
            [:
            npc="fcolor:880000"
            Да, меня зовут Вася.
               <font color="000000">{:да ну нафиг:}
               [:нет. чистая правда:]</font>
            :]
            <font color="000000">[:Нет, никто меня так не зовёт:]</font>
         :}
         {:
            Это правда, что вас зовут Васей?
            <font color="000000">[:Правда
            :]
            [:Неправда:]</font>
         :}
      <font color="008888">:]</font>
      <font color="ff8800">[:hero="ncolor:ff0000"
         Меня зовут Петя.</font>
         {:
            Вас зовут Петя?
            [:Да<font color="000000">{:Как это удобно!:}</font>:]
            [:Нет
               <font color="000000">{:Вас зовут не Петя? Как неудобно!:}</font>
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            <font color="000000">[:Правда:]</font>
            <font color="000000">[:Неправда:]</font>
         :}
         {:Неужели в самом деле Петей Вас зовут?
            <font color="000000">[:В самом деле:]</font>
            <font color="000000">[:Нет, не в самом:]</font>
         :}
      <font color="ff8800">:]</font>
   <font color="ff0000">:}</font>
</pre></font></tt></p>
<p>Каждая из этих реплик появится в виде действия. Искать вложенные в них реплики не имеет смысла, пока игрок не выберет одно из действий, поэтому модуль пока остановится.</p>
<p>Мы тоже остановимся, но совсем по другой причине. На этом примере мы увидели сразу два элемента диалога: узел и ветви. Узлом считается любая реплика, в которую "вложены" другие реплики. Не обязательно две. Может быть и одна, и три, и сто тысяч миллионов. Узлы различаются по типам точно так же, как и реплики: узел с репликой персонажа (актёрский узел) и узел с репликой героя (геройский узел, узел действия). Реплика, в которую не "вложено" ни одной другой реплики, называется финальной (последней, конечной. В нашем примере финальные реплики выделены чёрным цветом.). Две однотипные реплики, вложенные в одну реплику, считаются (и называются) ветвями диалога. Такие реплики называются одноуровневыми, то есть находящимися на одном уровне. Уровень реплики считается по количеству узлов, которые ей предшествовали. Поскольку корневой реплике не предшествует ни одного узла, она считается нулевым уровнем. Реплика "Как вас зовут?" из примера - первый уровень, и т.д.</p>
<a name="head-hide-replics"></a><h3>Скрытый узел</h3>
<p>Иногда нужно скрыть узел или целую ветку, чтобы она не выводилась ни при каких условиях, пока не будет осуществлён <a href="#prinuditelny_perehod" title="заголовок: Принудительные переходы и закрытие диалога" style="text-decoration:none"><font color="888888">принудительный переход</font></a>. Чтобы сделать это нужно завести пустой узел действия. Особенность работы модуля состоит в том, что он не выводит действия с пустым именем, поэтому в пустых узлах действий можно прятать другие реплики и целые ветви. Пример:</p>
<p><tt><font color="008800"><pre>
   [:
      {: Скрытая реплика :}
      {: Ещё одна скрытая реплика :}
      {: А это целая скрытая ветка
         [:
            Да, а вот и ответвление
            {:И финальная реплика:}
         :]
         [:
            Да, а вот и другое ответвление
            {:И ещё одна финальная:}
         :]
      :}
   :]
</pre></font></tt></p>
<h3>Ремарки</h3>

<p>Ремарка - это авторский текст, который бывает нужно поместить между репликами. Специальных настроек для ремарок нет, но делать их, тем не менее, просто. Для этого в текущую реплику неписи или героя можно добавить реплику с настройками, отменяющими имя актёра и тире (код ремарки выделен голубым цветом):</p>
<p><tt><font color="008800"><pre>
   {:
      npc="name:Ведущий:name"
      Как вас зовут?
      <font color="008888">{:   
         npc="name::name
         tire:nope"
         &lt;i&gt;
         Что Вы на это ответите?
         &lt;/i&gt;
      :}</font>
   :}
</pre></font></tt></p>
<p>Ремарки желательно делать финальными репликами, хотя и не обязательно.</p>
<h4>Ремарки внутри реплики</h4>
<p>Ремарки внутри реплики - это некоторые авторские пояснения, которые нужно вывести непосредственно внутри реплики. Например, прервать речь актёра, чтобы пояснить, какое действие он выполняет, пока произносит фразу. Или указать с какой интонацией или силой произносится фраза. Вот примеры таких ремарок:</p>
<div style="margin-left:1.5cm"><font color="008888"><b>Мишель </b><i><font color="888888">(громко)</font></i><b>:</b></font><font color="000000"> — Яичница с ветчиной, это сколько?</font><br><br>
<font color="008800"><b>Мыса:</b></font> <font color="000000">— На весну оставляю, <i><font color="888888">— хныча, малец потёр багровое ухо. —</font></i> Голодно будет.</font></div>
<p>В первом случае ремарка идёт сразу после имени и её отличие от имени в том, что она написана нежирным шрифтом, курсивом и серым цветом. Во втором случае ремарка прерывает прямую речь, и в отличие от прямой речи она написана курсивом и другим цветом. Последнюю сделать проще всего. Мы просто вставляем в фразу html-теги, которые изменят цвет и наклон текста:</p>
<p><tt><font color="008800"><pre>
   {:
      npc="name:Мыса:name ncolor:008800 fcolor:000000 nattrib:-b-n fattrib:-n"
      На весну оставляю, &lt;i&gt;&lt;font color="888888"&gt;— хныча, малец потёр багровое ухо. —&lt;/font&gt;&lt;/i&gt; Голодно будет.
   :}
</pre></font></tt></p>
<p>Чтобы сделать ремарку для первого случая, можно прибегнуть к одной из хитростей. Например, можно задать персонажу пустое имя и полностью прописать строку реплики со всеми именами, тегами и пр.:</p>
<p><tt><font color="008800"><pre>
   {:
      npc="name:Мишель:name ncolor:008800 fcolor:000000 nattrib:-b-n fattrib:-n"
      {:npc="name::name"
      &lt;font color="008888"&gt;&lt;b&gt;Мишель &lt;/b&gt;&lt;i&gt;&lt;font color="888888"&gt;(громко)&lt;/font&gt;&lt;/i&gt;&lt;b&gt;:&lt;/b&gt;&lt;/font&gt;
      &lt;font color="000000"&gt; — Яичница с ветчиной, это сколько?&lt;/font&gt;
      :}
   :}
</pre></font></tt></p>
<p>Или изменить имя персонажа на имя, в которое уже будет включена ремарка:</p>
<p><tt><font color="008800"><pre>
   {:
      npc="name:Мишель:name ncolor:008800 fcolor:000000 nattrib:-b-n fattrib:-n"
      {:npc="name:Мишель &lt;/b&gt;&lt;i&gt;&lt;font color="888888"&gt;(громко)&lt;/font&gt;&lt;/i&gt;&lt;b&gt;:name"
      — Яичница с ветчиной, это сколько?
      :}
   :}
</pre></font></tt></p>
<p>В последнем случае писанины меньше, однако нужно очень хорошо представлять себе, какие настройки применяются к имени.

<a name="head-kak_izbezhat_o4istki_spiska_deystviy"></a><h3>Как избежать очистки списка действий</h3>

<p>Особенность поведения модуля такова, что если узлом была реплика актёра, а ветвями являются реплики героя, производится очистка списка действий и вывод новых. Чтобы вывести новое действие при щелчке на одном из действий списка, но не удалять старые, помещать реплику героя следует непосредственно в предыдущую реплику героя. Так сделано в предпоследнем примере в реплике "Да, меня зовут Вася.":</p>
<p><tt><font color="008800"><pre>
   [:   npc="fcolor:880000"
      Да, меня зовут Вася.

      {:да ну нафиг:}
      [:нет. чистая правда:]
   :]
</pre></font></tt></p>

<h4>Удаление действия из списка</h4>

<p>Иногда необходимо не добавлять действия, не удаляя прочие, а удалить одно действие из списка не обновляя список. Для этого была введена команда <tt>selectact.delete</tt>. Прописывать её можно только для реплик героя. </p>

<h3>Блок последовательных реплик</h3>
<p>Иногда нужно вывести сразу не одну, не две, а несколько реплик поочерёдно от героя и персонажа</p><p>Для примера возьмём вот такой отрывок:</p>
<div style="margin-left:1.5cm; margin-right:2.5cm"><font color="008888"><b>Мишель</b> (громко)<b>:</b></font> <font color="000000">Яичница с ветчиной, это сколько?</font>
<br><font color="888888"><b>Женский голос</b> (громко)<b>:</b></font> <font color="000000">Сто восемьдесят.</font>
<br><i>Мишель поворачивается лицом к стойке.</i>
<br><font color="008888"><b>Мишель:</b></font> <font color="000000">Ладно. Делайте.</font>
<br><font color="888888"><b>Женщина:</b></font> <font color="000000">Хорошо.</font></div>
<p>У нас два собеседника: Женщина и Мишель. Пусть неписью побудет Мишель, а героем - Женщина.</p><p>Как обычно, для реплики мы задаём настройки:</p>
<p><tt><font color="008800"><pre>
   npc="name:Мишель:name ncolor:008888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
   hero="name:Женщина:name ncolor:888888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
</pre></font></tt></p>
<p>Если бы мы использовали только возможность вкладывать одну реплику в другую, мы могли бы написать этот диалог так:</p>
<p><tt><font color="008800"><pre>
   npc="name:Мишель:name ncolor:008888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
   hero="name:Женщина:name ncolor:888888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
   {:npc="name::name"
   &lt;font color="008888"&gt;&lt;b&gt;Мишель&lt;/b&gt; (громко)&lt;b&gt;:&lt;/b&gt;&lt;/font&gt; &lt;font color="000000"&gt;Яичница с ветчиной, это сколько?&lt;/font&gt;
      {:
      &lt;font color="888888"&gt;&lt;b&gt;Женский голос&lt;/b&gt; (громко)&lt;b&gt;:&lt;/b&gt;&lt;/font&gt; &lt;font color="000000"&gt;Сто восемьдесят.&lt;/font&gt;
         {:
         &lt;i&gt;Мишель поворачивается лицом к стойке.&lt;/i&gt;
            {:npc="name:Мишель:name"
               Ладно. Делайте.
               {:npc="name:Женщина:name ncolor:888888 fcolor:000000"
                  Хорошо.
               :}
            :}
         :}
      :}
   :}
</pre></font></tt></p>
<p>Но это не только громоздко, но ещё и неудобно, и даёт дополнительную нагрузку на плеер. Специально для таких случаев была придумана конструкция блоков реплик (блок фраз). Делается она очень просто. Между тегами <tt>frase-block: :frase-block</tt> помещаются строки нашего диалога. Каждая строка считается отдельной фразой/репликой. Если в начале строки вписать <tt>&lt;npc-name&gt;</tt>, то к строке будет применено форматирование согласно настройкам неписи. Если в начале строки указать  <tt>&lt;hero-name&gt;</tt>, то к ней будет применено форматирование согласно настройками героя. Если ни той ни другой метки в строке не обнаружено, дополнительное форматирование к строке не применяется. Таким образом наш диалог можно записать в одну "реплику":</p>
<p><tt><font color="008800"><pre>
   npc="name:Мишель:name ncolor:008888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
   hero="name:Женщина:name ncolor:888888 nattrib:-b-n fcolor:000000 fattrib:-n tire:nope"
   {:
      frase-block:
         &lt;font color="008888"&gt;&lt;b&gt;Мишель&lt;/b&gt; (громко)&lt;b&gt;:&lt;/b&gt;&lt;/font&gt; &lt;font color="000000"&gt;Яичница с ветчиной, это сколько?&lt;/font&gt;
         &lt;font color="888888"&gt;&lt;b&gt;Женский голос&lt;/b&gt; (громко)&lt;b&gt;:&lt;/b&gt;&lt;/font&gt; &lt;font color="000000"&gt;Сто восемьдесят.&lt;/font&gt;
         &lt;i&gt;Мишель поворачивается лицом к стойке.&lt;/i&gt;
         &lt;npc-name&gt;Ладно. Делайте.
         &lt;hero-name&gt;Хорошо.
      :frase-block
   :}
</pre></font></tt></p>
<p>Фразы, указанные в блоке, будут выводиться одна за другой с небольшой задержкой. Блок фраз имеет приоритет перед простым текстом реплики.</p>
<h3>Реплики по условию</h3>
<p>Иногда нам необходимо намеренно скрыть реплику до тех пор, пока не будет выполнено определённое условие. Например, реплика должна появляться только в тех случаях, когда в рюкзаке героя есть "Странный синий камушек", а до той поры быть скрыта. Чтобы написать такую скрытую реплику, используем специальные теги <tt>iffing:&nbsp;:iffing</tt>. Если Вы не первый день пользуетесь QSP, Вы знаете, что такое оператор условия и уже видели конструкции типа:</p>
<p><tt><pre><b>
   <font color="000088">if</font> <font color="884400">obj</font><font color="0000ff">(<font color="008800">'Странный синий камушек'</font>)</font><font color="000088">:</font>
      <font color="888888">! ---- какой-то код .... ---------</font>
   <font color="000088">end</font>
</b></pre></tt></p>
<p>Так вот. Между тегами <tt>iffing:&nbsp;:iffing</tt> нужно поместить всё, что находилось бы в этой конструкции между "<tt><font color="000088">if</font></tt>" и "<tt><font color="000088">:</font></tt>". То есть реплика по условию выглядела бы так:</p>
<p><tt><font color="008800"><pre>
   {:
      iffing:<font color="884400">obj</font><font color="0000ff">(<font color="004400">'Странный синий камушек'</font>)</font>:iffing
      О, я вижу ты нашёл странный синий камушек!
   :}
</pre></font></tt></p>
<P>Или так:</P>
<p><tt><font color="008800"><pre>
   [:
      iffing:<font color="884400">obj</font><font color="0000ff">(<font color="004400">'Странный синий камушек'</font>)</font>:iffing
      Не знаешь, что это за странный синий камушек?
   :]
</pre></font></tt></p>
<p>Используя подобную возможность, следует помнить, что все реплики, "вложенные" в реплику, выводимую по условию, окажутся недоступны до выполнения условия.</p>
<h3>Выполнение кода при выводе реплики</h3>
<p>Иногда при выводе реплики нужно выполнить какой-нибудь код. Особенно часто это бывает необходимо при выборе действия (выводится реплика героя). На такой случай предусмотрены специальные теги <tt>dynamic-code:&nbsp;:dynamic-code</tt>. Между ними можно разместить любой код QSP, который будет выполнен только при выводе реплики на экран. Если текст реплики не задан, на экран, конечно, ничего не выведется, но код всё равно будет выполнен. Код выполняется непосредственно перед выводом реплики на экран, поэтому если Вы пропишете вывод строки из кода, строка появится на экране до выводимой реплики. Вот пример вывода ремарки до реплики, используя код в реплике.</p>
<p><tt><font color="008800"><pre>
   {:
      dynamic-code:
      *pl '&lt;i&gt;&lt;font color="888888"&gt;Мишель поворачивается лицом к стойке.&lt;/font&gt;&lt;/i&gt;'
      :dynamic-code:
      Ладно. Делайте.
   :}
</pre></font></tt></p>
<a name="prinuditelny_perehod"></a><h3>Принудительные переходы по репликам. Закрытие диалога</h3>
<p>Принудительные переходы по репликам можно вставлять на любой реплике. Такие переходы не зависят от выполнения условий вывода реплики, можно перейти даже на <a href="#head-hide-replics" style="text-decoration:none" title="заголовок: Скрытый узел"><font color="888888">скрытые реплики</font></a>. Однако не рекомендуется злоупотреблять переходами, иначе можно создать непрямое зацикливание. Принудительные переходы необходимы, если Вам нужно переключиться на другую ветку диалога, или вернуться на пару узлов обратно. Можно выполнить переходы сразу на несколько реплик одновременно, однако не стоит забывать об <a href="#head-kak_izbezhat_o4istki_spiska_deystviy" style="text-decoration:none" title="заголовок: Как избежать очистки списка действий"><font color="888888">очистке списка действий и порядке его осуществления</font></a>.</p><p>Для переходов по репликам используются следующие команды:</p><div style="margin-left:0.75cm"><tt><font color="008800">levelup:</font>##</tt>   —   переход по узлам "назад". Вместо "решёток" указывается на сколько узлов нужно вернуться по репликам. Тип реплик при этом не учитывается. К примеру:
<p><tt><font color="008800"><pre>
   replics="repeat:cicle
   shuffle:random" 
   npc="name:Ведущий:name
   ncolor:008888
   fcolor:008888"
   hero="name:Вася пупкин:name"
   {:<font color="999900">marker:firstqst</font>
   Как вас зовут?
      [:Меня зовут Вася.
         {:
            Вас зовут Вася?
            [:Да, меня зовут Вася.:]
            <font color="0000ff">[:Нет, никто меня так не зовёт
            <font color="004444">levelup:5</font>:]</font>
         :}
         {:
            Это правда, что вас зовут Васей?
            [:Правда:]
            <font color="ff0000">[:Неправда
            <font color="004444">levelup:3</font>:]</font>
         :}
      :]
      [:
         Меня зовут Петя.
         {:
            Вас зовут Петя?
            [:Да{:Как это удобно!:}:]
            [:Нет
               <font color="004444">levelup:3</font>
               {:Вас зовут не Петя? Как неудобно!:}
            :]
         :}
         {:
            Это правда, что вас зовут Петей?
            [:Правда:]
            <font color="dd00dd">[:Неправда
            <font color="004444">leveljump:firstqst</font>:]</font>
         :}
         {:Неужели в самом деле Петей Вас зовут?
            [:В самом деле
            <font color="004444">closeup</font>:]
            [:Нет, не в самом
            <font color="004444">levelup:3</font>:]
         :}
      :]
   :}
</pre></font></tt></p>
<p>Здесь можно видеть несколько переходов по узлам, они выделены тёмно-голубым цветом. Сначала рассмотрим два из них.</p>
<p>Реплика "Неправда" (подсвечена красным цветом) должна осуществлять переход на три узла назад. Она вложена в реплику "Это правда, что вас зовут Васей?", которую произнёс актёр. То есть это один уровень назад. Реплика "Это правда, что вас зовут Васей?" вложена в реплику "Меня зовут Вася", которую произнёс герой. Это два уровня назад. Эта реплика, в свою очередь, вложена в реплику неписи "Как вас зовут?". Она и будет репликой, на которую осуществится принудительный переход - три узла назад.</p>
<p>Реплика "Нет, никто меня так не зовёт" (подсвечена синим цветом) должна осуществлять переход на пять узлов назад. Однако это невозможно, поскольку ей предшествовало всего четыре реплики, включая корневую. Переместиться на корневую реплику нельзя, поэтому будет осуществлено перемещение на реплику первого уровня "Как вас Зовут?".</p>
</div><div style="margin-left:0.75cm"><tt><font color="008800">leveljump:</font>MARKER</tt>   —   переход минуя все условия и промежуточные узлы на реплику с указанной меткой.<P>Вместо "<tt>MARKER</tt>" указывается метка. Чтобы поставить метку на реплике, нужно использовать одиночный тег <tt><font color="999900">marker:</font></tt>, после которого следует прописать без пробелов любое сочетание символов (можно использовать только буквы и цифры и символ подчёркивания). Эти символы и будут меткой. Пример реплики, осуществляющей переход на метку, выделен фиолетовым цветом в предыдущем примере. Сама метка выделена жёлтым цветом.</P><p>Если указанная в <tt>leveljump:</tt> метка отсутствует, переход не осуществится.</p><p>Чтобы осуществить переход сразу на несколько реплик, нужно указать для каждой из этих реплик одинаковые метки, а потом для реплики, с которой нужно перейти, указать команду <tt>leveljump:</tt> и эту метку. Либо выставить для каждой реплики свою собственную метку, а потом прописать в реплике, с которой нужно перейти, команду <tt>leveljump:</tt> столько раз на сколько реплик нужно перейти, с указанием каждой выставленной метки. Разница между двумя этими способами в том, что во втором случае Вы можете контролировать порядок вызова реплик. Вот оба варианта для сравнения:</p>
<table cellpadding="5" cellspacing="5" border="0"><tr><td width="50%">
<tt><font color="008800"><pre>
replics="repeat:cicle
shuffle:random" 
npc="name:Ведущий:name
ncolor:008888
fcolor:008888"
hero="name:Вася пупкин:name"
{:<font color="999900">marker:firstqst</font>
Как вас зовут?
   [:
      Меня зовут Петя.
      {:
         Вас зовут Петя?
         [:Да{:Как это удобно!:}:]
         [:Нет
            <font color="004444">levelup:3</font>
            {:Вас зовут не Петя? Как неудобно!:}
         :]
      :}
      {:
         Это правда, что вас зовут Петей?
         [:Правда:]
         <font color="dd00dd">[:Неправда
         <font color="004444">leveljump:firstqst</font>:]</font>
      :}
      {:Неужели в самом деле Петей Вас зовут?
        [:В самом деле
           <font color="004444">closeup</font>
        :]
        [:Нет, не в самом
           <font color="004444">levelup:3</font>
        :]
      :}
   :]
   [:
      {:А здесь у нас скрытая реплика
         <font color="999900">marker:firstqst</font>
      :}
   :]
:}
</pre></font></tt></td><td><tt><font color="008800"><pre>
replics="repeat:cicle
shuffle:random" 
npc="name:Ведущий:name
ncolor:008888
fcolor:008888"
hero="name:Вася пупкин:name"
{:
   <font color="999900">marker:firstqst</font>
   Как вас зовут?
   [:
      Меня зовут Петя.
      {:
         Вас зовут Петя?
         [:Да{:Как это удобно!:}:]
         [:Нет
            <font color="004444">levelup:3</font>
            {:Вас зовут не Петя? Как неудобно!:}
         :]
      :}
      {:
         Это правда, что вас зовут Петей?
         [:Правда:]
         <font color="dd00dd">[:Неправда
         <font color="004444">leveljump:firstqst</font>
         <font color="004444">leveljump:hidereplics</font>
         :]</font>
      :}
      {:Неужели в самом деле Петей Вас зовут?
         [:В самом деле
         <font color="004444">closeup</font>:]
         [:Нет, не в самом
         <font color="004444">levelup:3</font>:]
      :}
   :]
   [:
      {:А здесь у нас скрытая реплика
         <font color="999900">marker:hidereplics</font>
      :}
   :]
:}
</pre></font></tt></td></tr></table><P>В первом случае модуль сам отыщет первую реплику, которую выведет. Скорей всего это будет реплика с наивысшим уровнем. Во втором случае сначала будет осуществлён переход на реплику с меткой <tt>firstqst</tt>, а затем на реплику с меткой <tt>hidereplics</tt>. Т.е. именно в том порядке, в котором записаны команды <tt>leveljump:</tt> в реплике "Неправда", выделенной фиолетовым цветом.</P></div>
<P>Чтобы принудительно закрыть диалог из реплики, нужно ввести команду <tt>closeup</tt>. В последних примерах реплика "В самом деле" будет закрывать диалог. При закрытии диалога восстановится описание и действия локации, с которой диалог был вызван.</P>
<h3>Названия действий</h3>
<p>по умолчанию, в качестве названия действия выступает полный текст реплики. Это не всегда удобно. Иногда нужно вывести <i>очень</i> длинную реплику, полный текст которой будет смотреться неуместно в названии действия. На такой случай в модуле предусмотрена конструкция <tt>act-name:&nbsp;:act-name</tt>. Текст, помещённый между этими двумя тегами, будет использоваться в качестве названия действия. Пример:</p>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
      act-name:Вася:act-name
      Вообще моё имя - Василий. Но друзья зовут меня - Вася...
      :]
   :}
</pre></font></tt></p>
<P>В этом диалоге на экран сначала выведется реплика "Как вас зовут?" и действие с названием "Вася". При щелчке по действию, на экране появится реплика "Вообще моё имя - Василий. Но друзья зовут меня - Вася...".</P>
<p>Всё довольно просто. Когда нам нужно вывести название действия, отличное от произносимой реплики, используем эту конструкцию.</p><p>Эту же конструкцию следует использовать, если в узле действия Вы использовали конструкцию вывода блока фраз <tt>frase-block:&nbsp;:frase-block</tt>. Однако здесь можно написать и обыкновенную реплику без тегов <tt>act-name:&nbsp;:act-name</tt>, и она выведется в названии действия. Чтобы было понятнее, пример, когда в качестве названия действия выводится реплика:</p>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
      Меня зовут Вася.
      :]
      [:
      Я стесняюсь...
      frase-block:
         &lt;hero-name&gt;Мне так неловко...
         &lt;npc-name&gt;Отчего же?
         &lt;hero-name&gt;Моё имя так необычно звучит...
         &lt;npc-name&gt;Ну же, смелее!
         &lt;hero-name&gt;Вартасахан Бздюльгахаев!
         &lt;hero-name&gt;Можно просто: Вася.
      :frase-block
      :]
   :}
</pre></font></tt></p>
<p>Пример, когда в качестве названия действия, будет выведен текст, помещённый между <tt>act-name:&nbsp;:act-name</tt>:</p>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
      act-name:Вася:act-name
      Меня зовут Вася.
      :]
      [:
      act-name:Мне неловко...:act-name
      Я стесняюсь...
      frase-block:
         &lt;hero-name&gt;Мне неловко...
         &lt;npc-name&gt;Отчего же?
         &lt;hero-name&gt;Моё имя так необычно звучит...
         &lt;npc-name&gt;Ну же, смелее!
         &lt;hero-name&gt;Вартасахан Бздюльгахаев!
         &lt;hero-name&gt;Можно просто: Вася.
      :frase-block
      :]
   :}
</pre></font></tt></p>
<p>Пример, когда название у действия будет, но реплику герой не произнесёт:</p>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
      act-name:Вася:act-name
         {:npc="name::name"
         <i>
         Он бы мог сказать, что его зовут Вася. Но на самом деле его звали Вартасахан.
         </i>
         :}
      :]
   :}
</pre></font></tt></p>
<p>И напоследок. Блок фраз, который не появится в виде действия, потому что неоткуда извлечь название действия:</p>
<p><tt><font color="008800"><pre>
   {:
      Как вас зовут?
      [:
      frase-block:
         &lt;hero-name&gt;Мне неловко...
         &lt;npc-name&gt;Отчего же?
         &lt;hero-name&gt;Моё имя так необычно звучит...
         &lt;npc-name&gt;Ну же, смелее!
         &lt;hero-name&gt;Вартасахан Бздюльгахаев!
         &lt;hero-name&gt;Можно просто: Вася.
      :frase-block
      :]
   :}
</pre></font></tt></p>

<h3>Комментирование реплик</h3>
<p>Все реплики можно комментировать. Комментарии записываются так же, как записываются в обычном html-документе, т.е. внутри конструкции <tt><font color="888888">&lt;!--&nbsp;--&gt;</font></tt>. Перед выводом реплик все подобные конструкции будут удалены. Комментарии главным образом предназначены для помещения в них настроек и прочих текстов, которые не должны входить в реплику. Конечно, настройки можно указывать и не в комментариях, но если разместить их внутри комментария, обработка каждой реплики сократится на несколько миллисекунд. При больших уровнях вложенности это может существенно сократить время вывода всех реплик на экран. Все конструкции, расширяющие реплику, такие как <tt>frase-block:&nbsp;:frase-block</tt>, <tt>act-name:&nbsp;:act-name</tt>, <tt>iffing:&nbsp;:iffing</tt>, и др., можно и нужно размещать в комментариях. Лучше всего всё это уместить в одном комментарии.</p><p>Запрещено вкладывать комментарии в конструкции <tt>iffing:&nbsp;:iffing</tt> и <tt>dynamic-code:&nbsp;:dynamic-code</tt>, а так же вкладывать комментарии в комментарии. Вот пример неправильного размещения комментариев (подсвечены красным цветом):</p>
<p><tt><font color="008800"><pre>
   <font color="888888">&lt;!-- npc="
   name:Ведущий:name
   ncolor:008888<font color="ff0000">&lt;!-- цвет имени неписи --&gt;</font>
   fcolor:008888
   "
   hero="
   name:Вася Пупкин:name
   "
   --&gt;</font>
   {:
      Как вас зовут?
      [:

      hero="ncolor:008800"
         Меня зовут Вася.
         {:
         iffing:a=0<font color="ff0000">&lt;!-- реплика выводится, если "a" равно нулю --&gt;</font>:iffing
         dynamic-code:a=1:dynamic-code<font color="888888">&lt;!-- изменяем значение "a", чтобы реплика больше не выводилась --&gt;</font>
         Вас зовут Вася?
            [:
            npc="fcolor:880000"
            Да, меня зовут Вася.
               {:да ну нафиг:}
               [:
               нет. чистая правда
               :]
            :]
            [:Нет, никто меня так не зовёт:]
         :}
         {:
         iffing:a>0:iffing<font color="888888">&lt;!-- реплика выводится, если "a" больше нуля --&gt;</font>
         dynamic-code:if a&lt;5: a+=1<font color="ff0000">&lt;!-- изменяем значение "a", чтобы реплика больше не выводилась --&gt;</font>:dynamic-code
            Это правда, что вас зовут Васей?
            [:Правда
            :]
            [:Неправда:]
         :}
      :]
   :}
</pre></font></tt></p>
<p>Сами реплики в комментарии не помещаются.</p><p>Если комментарий разместить, например, в блоке фраз, то он будет проигнорирован html-рендерером, поскольку написан по правилам комментариев в html.</p>
<h2>Заключение</h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Если Вы прочитали данное руководство залпом и составление диалогов для интерпретации модулем <tt>easy.dialog</tt> показалось Вам слишком сложным, ознакомьтесь с другими возможностями составления диалогов в QSP. Чуть ниже даны ссылки на примеры от <tt>WladySpb</tt> и <tt>y4ndexx</tt>, а так же на пример реализации сложного диалога с помощью движка от <tt>Olegus.t.Gl</tt>. Может быть Вам подойдёт что-нибудь из этого. Или перечитайте руководство ещё раз, и ознакомьтесь с примерами диалогов, составленных для модуля, в файле <tt>game.easy.dialog.qsp</tt>, чтобы лучше усвоить как и что работает. Так же вы можете обратиться к составленному для <tt>easy.dialog</tt> краткому описанию, где в общих чертах раскрываются термины, понятия, структуры и принципы конструирования диалогов.</p>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;В тексте руководства использованы реплики из киносценариев и пьес разных авторов.</P><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Огромное спасибо <font color="008800">WladySpb</font> и <font color="008800">y4ndexx</font>, подготовившим <a href="http://qsp.su/index.php?option=com_content&view=article&id=72:-11&catid=36:2009-02-19-06-11-21&Itemid=76" title="перейти на QSP.su" target="new">примеры диалогов для QSP</a>, добавленные в официальные материалы для разработчиков. Они мне очень помогли, когда я только познакомился с QSP. А так же -  <font color=#008800>Olegus t.Gl</font> за реализацию "<a href="http://qsp.su/index.php?option=com_agora&task=topic&id=457&Itemid=57" target="new" title="перейти на QSP.su">диалога Чешира</a>", откуда я почерпнул немало идей и решений. Диалоги, реализованные в примерах, а так же "диалог Чешира", я постарался воспроизвести в примере использования модуля. Смотри файл "<tt>game.easy.dialog.qsp</tt>" в архиве.</p>
<h2>Содержание</h2>
<ol type="I"><li>Подключение</li>
<li>Простые диалоги</li>
<li>Запуск диалога</li>
<li>Настройки диалога
<ol type="1"><li>Форматирование реплик</li>
<li>Наследование настроек</li>
<li>Сброс настроек</li>
<li>Порядок вывода реплик</li>
</ol></li>
<li>Чуть более сложные диалоги
<ol type="1">
   <li>Корни, ветви и узлы</li>
   <li>Скрытый узел</li>
   <li>Ремарки
      <ul><li>Ремарки внутри реплики</li></ul>
   </li>
   <li>Как избежать очистки списка действий
      <ul><li>Удаление действия из списка</li></ul>
   </li>
   <li>Блок последовательных реплик</li>
   <li>Реплики по условию</li>
   <li>Выполнение кода при выводе реплики</li>
   <li>Принудительные переходы по репликам. Закрытие диалога</li>
   <li>Названия действий</li>
   <li>Комментирование реплик</li>
</ol></li>
<li>Заключение</li>
</ol>
</td></tr></table>
<hr>
<p>Примечания:</p>
<p><a name="prim1"></a>[1] <a href="#backprim1" style="text-decoration:none; font-size:12px;" title="Назад"><sup>&uarr;</sup></a> Возможно так же написание с использованием одиночного апострофа: <tt>npc='&nbsp;' hero='&nbsp;' replics='&nbsp;'</tt></p>

   <br><br><br><table width=100%><tr><td width=50%>&nbsp;</td><td><font size=1>Aleks Versus'easy.libraries'2014<br>Aleks Versus'GAM'RUS'2014</font></td></tr></table><br><br>
</body>
</html>