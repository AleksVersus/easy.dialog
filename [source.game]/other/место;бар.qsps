# место;бар
! одна из возможных локаций игры, с которой будем вызывать диалог
! описание локации:
'За стойкой стоит бармен — внимательным взглядом осматривает свои владения.
В зале почти пусто, только за угловым столиком, в самой тени, сидит Арагорн, да около барной стойки качается местный любитель выпить.'
! диалог бармена. Для удобства вносим в переменную:
$диалог['бармен']='
<!--

Это настройки отображения фраз героя, за которого вы играете и неиграбельного персонажа (npc).
Настройки помещены в комментарий. Текст, который вы сейчас читаете, не будет выводиться на экран,
поскольку так же находится внутри комментария.

Настройки вывода фраз бармена:

npc="
	Заметьте, здесь можно писать любой текст, он никак не повлияет на настройки,
	если отделён от них пробельным символом или символом перевода строки.
	
	name:Бармен:name	! Настройка имени npc
	ncolor:000000		! цвет имени npc. Чёрный, как в примере от WladySpb
	nattrib:-n			! аттрибуты шрифта имени: нормальный
	fcolor:000000		! цвет выводимой фразы npc
	fattrib:-n			! аттрибуты шрифта фразы: нормальный
	tire:				! разделительный символ между именем и фразой. По-умолчанию.
	"
Настройки вывода фраз героя, которым вы управляете:

hero="
	name:Вы:name
	ncolor:000000
	nattrib:-n
	fcolor:000000
	fattrib:-n
	tire:
	"
	
Поскольку диалог линейный, порядок вывода реплик задавать не будем - он не важен.
-->
<!-- Первой репликой идёт реплика бармена -->
{:
	Привет, диалоги небось изучаете?
	<!-- В неё вкладывается реплика героя, доступная для игрока -->
	[:
		Да, изучаю!
		<!-- Реплика бармена вкладывается в реплику героя -->
		{:
			А я тут один из трёх примеров, как вы, наверное, заметили.
			<!-- и так далее... -->
			[:
				А что демонстрируешь?
				{:
					Я демонстрирую простейший линейный диалог. Если вы посмотрите код, вы увидите, что все мои фразы являются вложенными друг в друга действиями.
					[:
						А Арагорн что делает?
						{:
							А Арагорн у нас показывает многовариантный диалог с использованием переменных.
							[:
								А где я могу посмотреть код?
								{:
									Ну, это просто! Как выйдешь из бара, у тебя появится несколько действий. Там ты сможешь рассмотреть код каждой локации. Или просто открой этот файл в QGen и посмотри, как всё сделано.
									{:
										<!-- так реализуются ремарки, или смена NPC -->
										<!-- npc="name:Ремарка от Aleks Versus:name ncolor:888888 nattrib:-b-i fcolor:888888 fattrib:-i (tire:	)" -->
										Как уже было объявлено на стартовой локации, сами примеры кода были опущены. Вы всегда можете посмотреть, как реализован тот или иной диалог, открыв данный файл через QGen.
									:}
									[:
										Спасибо за помощь, я пойду посмотрю!
										<!-- данной действие принудительно закроет диалог. Использована команда closeup -->
									:]
								:}
							:]
						:}
					:]
				:}
			:]
		:}
	:]
:}
'
! диалог пьяницы. Для удобства вносим в переменную:
$диалог['пьяница']="
<!--

npc='name:Пьяница:name
	ncolor:000000
	nattrib:-n
	fcolor:000000
	fattrib:-n
	tire:'
hero='name:Вы:name
	ncolor:000000
	nattrib:-n
	fcolor:000000
	fattrib:-n
	tire:'

Диалог пьяницы состоит из трёх веток, каждая из которых вызывается только при определённом значении переменной.
Переменная эта внешняя, т.е. не одна из тех, которые автоматически генерируются модулем, поэтому используем
конструкции условий и динамического кода

-->
{:
	<!-- Первая ветка диалога с пьяницей -->
	<!-- iffing:$GAME_VALUE['диалог.пьяница.выбор ветки']='':iffing -->
	Ик... Привет!
	[:
		А ты что тут показываешь?
		{:
			А я тут демонстрирую как сделать так, чтобы персонаж при последующем визите говорил что-то новое! Ик!
			[:
				И как это проверить?
				{:
					Да очень просто! Попробуй заговорить со мной ещё раз!
					[:
						<!-- здесь у нас должно выводиться действие, но чтобы реплика на экран не выводилась -->
						<!-- конструкция подменяющая имя действия act-name:Отойти от него:act-name -->
						<!--
							динамический код, присваивающий значение глобальной переменной 
							dynamic-code:$GAME_VALUE['диалог.пьяница.выбор ветки']='second':dynamic-code
						-->
						<!-- всё поместилось в комментарии. Команда closeup тоже -->
					:]
				:}
			:]
		:}
	:]
:}
{:
	<!-- Вторая ветка диалога с пьяницей -->
	<!-- iffing:$GAME_VALUE['диалог.пьяница.выбор ветки']='second':iffing -->
	Ну что, убедился?
	[:
		Да, убедился.
		{:
			Вот, то-то же!
			[:
				<!-- act-name:Отойти от него:act-name -->
				<!-- dynamic-code:$GAME_VALUE['диалог.пьяница.выбор ветки']='third':dynamic-code -->
				closeup
			:]
		:}
	:]
:}
{:
	<!-- Третья ветка диалога с пьяницей -->
	<!-- iffing:$GAME_VALUE['диалог.пьяница.выбор ветки']='third':iffing -->
	Ну хватит уже подходить! Варианты не бесконечны!
	[:
		А сколько вариантов?
		{:
			Конкретно в этом диалоге — три. Можно сделать и больше, но для примера, думаю, хватит!
			[:
				<!-- act-name:Отойти от него:act-name closeup-->
			:]
		:}
	:]
:}
"
! диалог арагорна. для удобства помещаем в переменную
$диалог['арагорн']='
<!--
npc="name:Арагорн:name ncolor:008800 nattrib:-n fcolor:008800 fattrib:-n"
hero="name:Вы:name ncolor:0000ff nattrib:-n fcolor:0000ff fattrib:-n"



-->
{:
	<!-- Вступительная ветка Арагорна -->
	Приветствую, диалоги рассматриваете разные, как я погляжу?
	<!-- iffing:$GAME_VALUE["диалог.арагорн.выбор ветки"]="":iffing -->
	<!-- dynamic-code:$GAME_VALUE["диалог.арагорн.выбор ветки"]="second":dynamic-code -->
	[:
		Да, решил вот, с вами поговорить.
		{:
			Спрашивай, не стесняйся, у меня самый продвинутый диалог!
			{:
				marker:other_question
				[:
					Как реализован твой диалог?
					{:
						Ну, это довольно просто. Диалог состоит из нескольких блоков — после того как ты выберешь один из вариантов, он удаляется из списка действий. Иногда удаляются все действия, а вместо них добавляются новые. Как сейчас, например.
						<!-- leveljump:block_stick -->
					:}
				:]
				[:
					А чем бармен с тем алкоголиком заведуют?
					{:
						<!-- leveljump:dialog_struckture -->
						Бармен показывает пример самого простого линейного диалога, пьяница — немногим лучше, показывает как в сущности легко сделать чтобы при каждом следующем разговоре были другие фразы. У них даже цветами фразы героя и NPC не разделены, да и локация одна на двоих. Если хочешь знать моё мнение — у меня самый грамотно образованный диалог. Но и самый сложный.
					:}
				:]
				[:
					Ладно, пойду я, пожалуй.
					<!-- очистка списка действий dynamic-code:cla:dynamic-code-->
					{:
						<!-- в оригинале перед этой репликой стоит задержка, потом вывод реплики, снова задержка, потом закрытие -->
						<!-- динамический код в этой реплике осуществит задержку, после чего она появится на экране -->
						Ну, прощай тогда!
						<!-- dynamic-code:wait 500:dynamic-code -->
							{:
								<!-- Эта реплика не появится на экране, она выполнит задержку и closeup -->
								<!-- dynamic-code:wait 2000:dynamic-code -->
							:}
					:}
				:]
			:}
		:}
	:]
:}
{:
	<!-- Вторая ветка Арагорна -->
	Ну что, ещё что-то спросить желаешь?
	<!-- iffing:$GAME_VALUE["диалог.арагорн.выбор ветки"]="second":iffing -->
	[:
		Да, хотел поподробнее разузнать кое-что.
		{:
			Ладно уж, по такому случаю повторю...
			<!-- leveljump:other_question -->
		:}
	:]
	[:
		Нет, я всё понял уже.
		{:
			Ну, раз понял, так и не стой тут!
			<!-- dynamic-code:wait 500:dynamic-code -->
			{:
				<!-- dynamic-code:wait 2000:dynamic-code closeup -->
			:}
		:}
	:]
:}
[:
	<!-- общие ветки -->
	{:
		marker:block_stick
		<!-- ветка объяснения про блоки -->
		[:
			А если я захочу выбрать вариант вопроса, который исчез?
			<!-- действие которое должно удаляться после выбора selectact.delete -->
			{:
				Весь наш разговор происходит в цикле, как только мы закончим обсуждать текущий вопрос, мы вернёмся к общему списку вопросов. Если хочешь, ты можешь сделать это прямо сейчас.
			:}
			[:
				<!-- действие, которое должно появиться без очистки списка действий -->
				То есть, я могу спросить что-то другое?
				{:
					Да, конечно, спрашивай, что хочешь.
					<!-- leveljump:other_question -->
				:}
			:]
		:]
		[:
			И сколько всего этих "блоков"? И какие они?
			<!-- selectact.delete -->
			{:
				Ну, первый блок, это блок приветствия. В него ты попадаешь в самом начале. Оттуда тебя "перекидывает" в основной блок вопросов, второй по счёту, а за ним идут блоки вопросов, для каждого вопроса — свой блок.
			:}
		:]
		[:
			А как формируется список действий?
			<!-- selectact.delete -->
			{:
				Когда локация, на которой расположен этот диалог, обновляется, происходит проверка аргументов. При первом запуске (начало диалога) аргумент 0, поэтому из всего кода обрабатывается только один блок, блок приветствия. При выборе действий запускается обновление локации (точнее — переход на неё без очистки окна), на этот раз — с аргументом 1. Теперь из всей локации обрабатыается код только в блоке 1 (второй по счёту). В этом блоке перечень вопросов. Задавая какой-либо из них, вы обновляете локацию с каким-либо аргументом, в списке действий появляются варианты, содержащиеся в соответствующем блоке.
			:}
		:]
	:}
	{:
		marker:dialog_struckture
		<!-- Ветка объяснения структуры диалогов -->
		[:
			А как устроен диалог бармена?
			<!-- selectact.delete -->
			{:О, у него просто несколько вложенных действий. Ничего особенного, качественной РПГ не сделать, но для новеллы в самый раз.:}
		:]
		[:
			А как устроен диалог алкоголика?
			<!-- selectact.delete -->
			{:Там несколько вложенных локаций и проверка переменной. Первый раз подходишь — переменная равна нулю, он тебе говорит одно, переменной присваивается значение 1. Второй раз подходишь — у переменной другое значение, он тебе говорит другое... И так далее. Неплохой вариант для многих игр, в особенности для квестов, но не самый интерактивный.:}
		:]
		[:
			А как организован твой диалог?
			{:<!-- leveljump:block_stick -->Ну, это довольно просто. Диалог состоит из нескольких блоков, после того как ты выберешь один из вариантов, он удаляется из списка действий. Иногда удаляются все действия, а вместо них добавляются новые. Как сейчас, например.:}
		:]
		[:
			Давай поговорим о другом.
			{:<!-- leveljump:other_question -->Конечно, о чём ты хочешь поговорить?:}
		:]
	:}
:]
'
! действия на локации
act 'Подойти к бармену':
	! "здесь отображено, как можно генерировать диалог сразу из исходника,
		но чтобы он при этом не генерировался каждый раз раз"
	if $GAME_VALUE['диалог.бармен']="":
	! если внешняя переменная (переменная игры, а не модуля диалогов) пуста
		! присваиваем локальной переменной тело исходника
		$args[0]=$диалог['бармен']
	else
	! в противном случае
		! присваиваем локальной переменной значение внешней
		$args[0]=$GAME_VALUE['диалог.бармен']
	end
	! вызов интерпретатора диалогов easy.dialog
	gosub 'dialog.int',$args[0]
	! после того, как будет интерпретирована корневая реплика, присваиваем внешней переменной айди корневой реплики
	if $GAME_VALUE['диалог.бармен']="": $GAME_VALUE['диалог.бармен']=$DIALOG_VALUE['roof.id']
end
act 'Подойти к пьянице':
	! вызов интерпретатора диалогов easy.dialog
	gosub 'dialog.int',$диалог['пьяница']
end
act 'Подойти к Арагорну':
	! вызов интерпретатора диалогов easy.dialog
	gosub 'dialog.int',$диалог['арагорн']
end
--- место;бар ---------------------------------